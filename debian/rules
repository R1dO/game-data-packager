#!/usr/bin/make -f

#export DH_VERBOSE=1

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif
ifneq (,$(findstring debug,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -g
endif
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	INSTALL_PROGRAM += -s
endif

# Not using dpkg-architecture to keep in sync with ioq3's Makefile
Q3ARCH=$(shell uname -m | sed -e s/i.86/i386/)

# push default optimization a bit down, as they *might* lead to problems
BUILD_FLAGS=
ifeq ($(Q3ARCH),i386)
	BUILD_FLAGS="OPTIMIZE=-O2 -march=i486 -fomit-frame-pointer -ffast-math -funroll-loops -falign-loops=2 -falign-jumps=2 -falign-functions=2 -fstrength-reduce"
endif

configure: configure-stamp
configure-stamp:
	dh_testdir
	touch configure-stamp

build: build-stamp
build-stamp: configure-stamp
	dh_testdir
	$(MAKE) $(BUILD_FLAGS)
	/usr/bin/docbook-to-man debian/ioq3ded.sgml > ioq3ded.6
	/usr/bin/docbook-to-man debian/ioquake3.sgml > ioquake3.6
	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp ioq3ded.6 ioquake3.6
	-$(MAKE) distclean
	-rm -f ioquake3.xpm # clean up our own stuff
	dh_clean

install: DH_OPTIONS=
install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs
	
	### prepare some things we like better in our own style
	cp build/release-linux-$(Q3ARCH)/ioquake3.$(Q3ARCH) build/release-linux-$(Q3ARCH)/ioquake3
	cp build/release-linux-$(Q3ARCH)/ioquake3-smp.$(Q3ARCH) build/release-linux-$(Q3ARCH)/ioquake3-smp
	cp build/release-linux-$(Q3ARCH)/ioq3ded.$(Q3ARCH) build/release-linux-$(Q3ARCH)/ioq3ded
	cp code/unix/quake3.xpm ioquake3.xpm
	
	### client files
	dh_install -pquake3 debian/scripts/ioquake3 usr/games
	dh_install -pquake3 ioquake3.xpm usr/share/pixmaps
	dh_install -pquake3 debian/ioquake3.desktop usr/share/applications # TODO waiting for dh_desktop to do this job...
	dh_install -pquake3 build/release-linux-$(Q3ARCH)/ioquake3 \
		   build/release-linux-$(Q3ARCH)/ioquake3-smp \
		   usr/lib/games/ioquake3
	dh_install -pquake3 build/release-linux-$(Q3ARCH)/baseq3/cgame$(Q3ARCH).so \
		   build/release-linux-$(Q3ARCH)/baseq3/qagame$(Q3ARCH).so \
		   build/release-linux-$(Q3ARCH)/baseq3/ui$(Q3ARCH).so \
		   usr/lib/games/ioquake3/baseq3
	dh_install -pquake3 build/release-linux-$(Q3ARCH)/missionpack/cgame$(Q3ARCH).so \
		   build/release-linux-$(Q3ARCH)/missionpack/qagame$(Q3ARCH).so \
		   build/release-linux-$(Q3ARCH)/missionpack/ui$(Q3ARCH).so \
		   usr/lib/games/ioquake3/missionpack
	
	### server files
	dh_install -pquake3-server debian/scripts/ioq3ded usr/games
	dh_install -pquake3-server build/release-linux-$(Q3ARCH)/ioq3ded usr/lib/games/ioquake3

	#$(MAKE) copyfiles COPYDIR=$(CURDIR)/debian/quake3/usr/lib/games/quake3/
	#install -p -m 644 code/unix/quake3.xpm $(CURDIR)/debian/quake3/usr/share/pixmaps/
	#install -p -m 755 debian/ioquake3 $(CURDIR)/debian/quake3/usr/games/
	#install -p -m 755 debian/ioq3ded $(CURDIR)/debian/quake3/usr/games/
	## install -p -m 755 code/unix/setup/ioquake3.sh $(CURDIR)/debian/quake3/usr/lib/games/quake3/
	#install -p -m 644 debian/ioquake3.desktop $(CURDIR)/debian/quake3/usr/share/applications/
	install -p -m 644 debian/ioquake3ta.xpm $(CURDIR)/debian/quake3/usr/share/pixmaps/
	install -p -m 644 debian/ioquake3ta.desktop $(CURDIR)/debian/quake3/usr/share/applications/

binary-indep: build install
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installdebconf
	dh_installdocs -a
	dh_installexamples -a
	dh_installmenu -a
#	dh_installlogrotate -a
#	dh_installemacsen -a
#	dh_installpam -a
#	dh_installmime -a
#	dh_installinit -a
	dh_installcron -a
#	dh_installman -a debian/quake3.6
	dh_installman -pquake3-server ioq3ded.6
	dh_installman -pquake3 ioquake3.6
	dh_link -pquake3-common usr/share/games/quake3/baseq3/pak0.pk3 usr/lib/games/ioquake3/baseq3/pak0.pk3
	dh_link -pquake3-common usr/share/games/quake3/baseq3/pak1.pk3 usr/lib/games/ioquake3/baseq3/pak1.pk3
	dh_link -pquake3-common usr/share/games/quake3/baseq3/pak2.pk3 usr/lib/games/ioquake3/baseq3/pak2.pk3
	dh_link -pquake3-common usr/share/games/quake3/baseq3/pak3.pk3 usr/lib/games/ioquake3/baseq3/pak3.pk3
	dh_link -pquake3-common usr/share/games/quake3/baseq3/pak4.pk3 usr/lib/games/ioquake3/baseq3/pak4.pk3
	dh_link -pquake3-common usr/share/games/quake3/baseq3/pak5.pk3 usr/lib/games/ioquake3/baseq3/pak5.pk3
	dh_link -pquake3-common usr/share/games/quake3/baseq3/pak6.pk3 usr/lib/games/ioquake3/baseq3/pak6.pk3
	dh_link -pquake3-common usr/share/games/quake3/baseq3/pak7.pk3 usr/lib/games/ioquake3/baseq3/pak7.pk3
	dh_link -pquake3-common usr/share/games/quake3/baseq3/pak8.pk3 usr/lib/games/ioquake3/baseq3/pak8.pk3
	dh_installinfo
#	dh_undocumented -a
	dh_installchangelogs -pquake3 ChangeLog
	dh_installchangelogs -pquake3-server ChangeLog
	dh_strip -a
	dh_compress
	dh_fixperms
#	dh_makeshlibs -a
	dh_installdeb
#	dh_perl -a
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch

.PHONY: build clean binary-indep binary-arch binary install 
