Quake II dedicated server for Debian
====================================

Game data
---------

The Quake II engine requires game data to run.  The data is not freely
redistributable.  You should use the 'game-data-packager' tool to install it.

For the full game, you will need at least baseq2/pak0.pak and
baseq2/videos/ from a Quake II installation or CD-ROM; everything
else can be downloaded by game-data-packager. See
/usr/share/games/game-data-packager/quake2.yaml for full details,
including the sizes and checksums of the required files.

Demo files are freely downloadable and can also be packaged using
game-data-packager.

Running the server via the init script
--------------------------------------

By default, quake2-server adds a user under which to run the dedicated server
(quake2-server) and sets it up to be run by an init script in the conventional
Debian way. This is a simple setup suitable for running one server on a
machine; by default it will run a deathmatch game.

The quake2-server user's home directory is /var/games/quake2-server, so you
can find Quake files in /var/games/quake2-server/.yq2 or similar.

The /etc/quake2-server directory is symlinked into the game engine's
search path as etc/quake2-server, so you can place files there and execute
them with commands like "exec etc/quake2-server/ctf.cfg".

In addition, debian_server.cfg in the engine's search path is also a symlink
to either /etc/quake2-server/debian_server.cfg or
/etc/quake2-server/demo/debian_server.cfg, depending whether you
are using the demo data or the full game. By default, the init script will
execute debian_server.cfg.

For compatibility with older versions of the quake-server package,

The server can be managed in the usual way, e.g. via service(8)
and update-rc.d(8) commands like

    service quake2-server stop
    service quake2-server start
    update-rc.d quake2-server disable
    update-rc.d quake2-server enable

which should work for all of Debian's supported init systems.

Running the server with cron and screen
---------------------------------------

One alternative way to run the server is to run it in a screen(1) session
from a cron @reboot action. This can be used to run multiple instances
of the server; you'll need to set a different port number on each server after
the first, and it's safest to give each server a unique home directory so they
don't overwrite each other's configuration files.

To do this, you could put something like this in the quake2-server user's
crontab (don't break the long lines!):

    @reboot screen -d -m -S ffa env HOME=/var/games/quake2-server/ffa /usr/games/quake2-server +exec ffa.config
    @reboot screen -d -m -S ctf env HOME=/var/games/quake2-server/ctf /usr/games/quake2-server +set port 54321 +exec ctf.config

or in /etc/crontab or a file in /etc/cron.d:

    @reboot quake2-server screen -d -m -S ffa env HOME=/var/games/quake2-server/ffa /usr/games/quake2-server +exec ffa.config
    @reboot quake2-server screen -d -m -S ctf env HOME=/var/games/quake2-server/ctf /usr/games/quake2-server +set port 54321 +exec ctf.config

If you do that, you can access the servers' consoles by attaching a screen
session to them:

    sudo -u quake2-server screen -r ffa
    sudo -u quake2-server screen -r ctf
