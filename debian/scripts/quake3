#!/bin/sh
# Adapted from Tremulous and Nexuiz launch scripts
BINARY=/usr/lib/games/quake3/ioquake3
BASE_PATH=/usr/share/games/quake3
GAME=baseq3
QUIET=0
EXCUSE="\
Quake 3 client wrapper\n\
This script is Debian specific, it is *NOT* part of the source distribution!\n\
Usage: quake3 [OPTION]...\n\
\n\
 -h, --help\t\tDisplay this help\n\
 -q, --quiet\t\tDisable console output\n\
 +<internal command>\tPass commands to the engine\n"

# ioQuake3 binaries don't understand "regular" command line parameters. Let's
# catch them here, to avoid accidently launching the binary.

while [ "$1" != "" ]; do {
	if [ "$1" = "+set" -o "$1" = "+connect" ]; then
		break;
	fi
	case "$1" in
		-h|--help)
			echo ${EXCUSE}
			exit 0
			;;
		-q|--quiet)
			QUIET=1
			;;
	esac
	shift
}; done

# baseq3 creates botlib.log in cwd rather than ~/.q3a/baseq3
# this is a dirty hack to work around this issue
[ -d $HOME/.q3a/baseq3 ] || mkdir -p $HOME/.q3a/baseq3; cd $HOME/.q3a/baseq3

# Ready to rumble!

if [ ${QUIET} -eq 1 ]; then
	exec ${BINARY} +set fs_basepath ${BASE_PATH} +set fs_game ${GAME} +set ttycon 0 +set vm_ui 2 $* >/dev/null 2>&1
else # We don't include ioquake3 qvm and so, so we have to set vm_ui 2
	exec ${BINARY} +set fs_basepath ${BASE_PATH} +set fs_game ${GAME} +set vm_ui 2 $*
fi

exit $?
